<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd">

	<description>
		The intent is to to give an example of how existing bean
		definitions (e.g. from custom application's domain layer) can be
		integrated into a batch job.
	</description>

	<job id="delegatingJob" xmlns="http://www.springframework.org/schema/batch">
		<step id="delegateJob.delegateStep1">
			<tasklet>
				<chunk reader="delegateJob.reader" writer="delegateJob.writer" commit-interval="3"/>
			</tasklet>
		</step>
	</job>

	<bean id="delegateJob.reader" class="org.springframework.batch.item.adapter.ItemReaderAdapter">
		<property name="targetObject" ref="delegateJob.delegateObject" />
		<property name="targetMethod" value="getData" />
	</bean>

	<bean id="delegateJob.writer" class="org.springframework.batch.item.adapter.PropertyExtractingDelegatingItemWriter">
		<property name="targetObject" ref="delegateJob.delegateObject" />
		<property name="targetMethod" value="processPerson" />
		<property name="fieldsUsedAsTargetMethodArguments">
			<list>
				<value>firstName</value>
				<value>address.city</value>
			</list>
		</property>
	</bean>

	<bean id="delegateJob.delegateObject" class="egovframework.sample.bat.domain.person.PersonService" />

</beans>