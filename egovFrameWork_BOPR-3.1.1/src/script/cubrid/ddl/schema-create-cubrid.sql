DROP TABLE IF EXISTS  TRADE_SEQ ;
DROP TABLE IF EXISTS  CUSTOMER_SEQ ;
DROP TABLE IF EXISTS  TRADE ;
DROP TABLE IF EXISTS  CUSTOMER ;
DROP TABLE IF EXISTS  CUSTOMER_READ ;

DROP TABLE IF EXISTS  BATCH_STEP_EXECUTION_CONTEXT ;
DROP TABLE IF EXISTS  BATCH_JOB_EXECUTION_CONTEXT ;
DROP TABLE IF EXISTS  BATCH_STEP_EXECUTION ;
DROP TABLE IF EXISTS  BATCH_JOB_EXECUTION ;
DROP TABLE IF EXISTS  BATCH_JOB_PARAMS ;
DROP TABLE IF EXISTS  BATCH_JOB_INSTANCE ;
DROP TABLE IF EXISTS  BATCH_STEP_EXECUTION_SEQ ;
DROP TABLE IF EXISTS  BATCH_JOB_EXECUTION_SEQ ;
DROP TABLE IF EXISTS  BATCH_JOB_SEQ ;



CREATE TABLE BATCH_JOB_INSTANCE  (
	JOB_INSTANCE_ID BIGINT  NOT NULL PRIMARY KEY ,  
	VERSION BIGINT ,  
	JOB_NAME VARCHAR(300) NOT NULL, 
	JOB_KEY VARCHAR(32) NOT NULL,
	constraint JOB_INST_UN unique (JOB_NAME, JOB_KEY)
);

CREATE TABLE BATCH_JOB_EXECUTION  (
	JOB_EXECUTION_ID BIGINT  NOT NULL PRIMARY KEY ,
	VERSION BIGINT  ,  
	JOB_INSTANCE_ID BIGINT NOT NULL,
	CREATE_TIME DATETIME NOT NULL,
	START_TIME DATETIME DEFAULT NULL , 
	END_TIME DATETIME DEFAULT NULL ,
	STATUS VARCHAR(30) ,
	EXIT_CODE VARCHAR(300) ,
	EXIT_MESSAGE VARCHAR(7500) ,
	LAST_UPDATED DATETIME,
	constraint JOB_INST_EXEC_FK foreign key (JOB_INSTANCE_ID)
	references BATCH_JOB_INSTANCE(JOB_INSTANCE_ID)
);
	
CREATE TABLE BATCH_JOB_PARAMS  (
	JOB_INSTANCE_ID BIGINT NOT NULL ,
	TYPE_CD VARCHAR(6) NOT NULL ,
	KEY_NAME VARCHAR(100) NOT NULL , 
	STRING_VAL VARCHAR(250) , 
	DATE_VAL DATETIME DEFAULT NULL ,
	LONG_VAL BIGINT ,
	DOUBLE_VAL DOUBLE PRECISION ,
	constraint JOB_INST_PARAMS_FK foreign key (JOB_INSTANCE_ID)
	references BATCH_JOB_INSTANCE(JOB_INSTANCE_ID)
);
	
CREATE TABLE BATCH_STEP_EXECUTION  (
	STEP_EXECUTION_ID BIGINT  NOT NULL PRIMARY KEY ,
	VERSION BIGINT NOT NULL,  
	STEP_NAME VARCHAR(300) NOT NULL,
	JOB_EXECUTION_ID BIGINT NOT NULL,
	START_TIME DATETIME NOT NULL , 
	END_TIME DATETIME DEFAULT NULL ,  
	STATUS VARCHAR(30) ,
	COMMIT_COUNT BIGINT , 
	READ_COUNT BIGINT ,
	FILTER_COUNT BIGINT ,
	WRITE_COUNT BIGINT ,
	READ_SKIP_COUNT BIGINT ,
	WRITE_SKIP_COUNT BIGINT ,
	PROCESS_SKIP_COUNT BIGINT ,
	ROLLBACK_COUNT BIGINT , 
	EXIT_CODE VARCHAR(300) ,
	EXIT_MESSAGE VARCHAR(7500) ,
	LAST_UPDATED DATETIME,
	constraint JOB_EXEC_STEP_FK foreign key (JOB_EXECUTION_ID)
	references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
);

CREATE TABLE BATCH_STEP_EXECUTION_CONTEXT  (
	STEP_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY,
	SHORT_CONTEXT VARCHAR(7500) NOT NULL,
	SERIALIZED_CONTEXT STRING , 
	constraint STEP_EXEC_CTX_FK foreign key (STEP_EXECUTION_ID)
	references BATCH_STEP_EXECUTION(STEP_EXECUTION_ID)
);

CREATE TABLE BATCH_JOB_EXECUTION_CONTEXT  (
	JOB_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY,
	SHORT_CONTEXT VARCHAR(7500) NOT NULL,
	SERIALIZED_CONTEXT STRING , 
	constraint JOB_EXEC_CTX_FK foreign key (JOB_EXECUTION_ID)
	references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
);


CREATE serial BATCH_STEP_EXECUTION_SEQ START WITH 0 MINVALUE 0 MAXVALUE 9223372036854775807 NOCYCLE;
CREATE serial BATCH_JOB_EXECUTION_SEQ START WITH 0 MINVALUE 0 MAXVALUE 9223372036854775807 NOCYCLE;
CREATE serial BATCH_JOB_SEQ START WITH 0 MINVALUE 0 MAXVALUE 9223372036854775807 NOCYCLE;
CREATE serial CUSTOMER_SEQ START WITH 0 MINVALUE 0 MAXVALUE 9223372036854775807 NOCYCLE;
CREATE serial TRADE_SEQ START WITH 0 MINVALUE 0 MAXVALUE 9223372036854775807 NOCYCLE;

CREATE TABLE TRADE  (
	ID BIGINT  NOT NULL PRIMARY KEY ,  
	VERSION BIGINT ,
	ISIN VARCHAR(135) NOT NULL, 
	QUANTITY BIGINT ,
	PRICE DECIMAL(8,2) , 
	CUSTOMER VARCHAR(135) 
);

CREATE TABLE CUSTOMER (
	ID varchar(600) ,
	NAME VARCHAR(135) ,
	CREDIT VARCHAR(30) 
);

CREATE TABLE CUSTOMER_READ(
	ID BIGINT,
	NAME VARCHAR(135),
	CREDIT VARCHAR(135)
);